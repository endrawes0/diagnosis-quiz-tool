{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import QuestionDisplay from'./QuestionDisplay';import ProgressBar from'./ProgressBar';import Timer from'./Timer';import ScoreDisplay from'./ScoreDisplay';import{quizAPI}from'../services/api';import styles from'../styles/QuizPlayer.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizPlayer=_ref=>{var _quiz$quiz_data,_quiz$quiz_data$quest,_quiz$quiz_data2,_quiz$quiz_data2$ques;let{quizConfig,onQuizComplete,onQuizExit,userId=null}=_ref;const[quiz,setQuiz]=useState(null);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);const[answers,setAnswers]=useState([]);const[isSubmitted,setIsSubmitted]=useState(false);const[showFeedback,setShowFeedback]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[quizResults,setQuizResults]=useState(null);const[timeLeft,setTimeLeft]=useState(60);const[streak,setStreak]=useState(0);const[totalTime,setTotalTime]=useState(0);const currentQuestion=quiz===null||quiz===void 0?void 0:(_quiz$quiz_data=quiz.quiz_data)===null||_quiz$quiz_data===void 0?void 0:(_quiz$quiz_data$quest=_quiz$quiz_data.questions)===null||_quiz$quiz_data$quest===void 0?void 0:_quiz$quiz_data$quest[currentQuestionIndex];const totalQuestions=(quiz===null||quiz===void 0?void 0:(_quiz$quiz_data2=quiz.quiz_data)===null||_quiz$quiz_data2===void 0?void 0:(_quiz$quiz_data2$ques=_quiz$quiz_data2.questions)===null||_quiz$quiz_data2$ques===void 0?void 0:_quiz$quiz_data2$ques.length)||0;useEffect(()=>{if(quizConfig){startQuiz();}},[quizConfig]);const startQuiz=async()=>{console.log('startQuiz called with config:',quizConfig);setLoading(true);setError(null);try{console.log('Calling quizAPI.generateQuiz...');const response=await quizAPI.generateQuiz(quizConfig);console.log('API response received:',response);console.log('Response data:',response.data);if(response.data&&response.data.quiz_data){setQuiz(response.data);setTimeLeft(quizConfig.untimed_mode?0:quizConfig.time_per_question||60);}else{throw new Error('Invalid response format: missing quiz_data');}}catch(err){console.error('Quiz generation error:',err);let errorMessage='Failed to load quiz. Please try again.';if(err.response){// Server responded with error\nconsole.error('Response status:',err.response.status);console.error('Response data:',err.response.data);if(err.response.data&&err.response.data.message){errorMessage=\"Quiz generation failed: \".concat(err.response.data.message);}else if(err.response.status===404){errorMessage='Quiz service not found. Please check if the backend is running.';}else if(err.response.status===500){errorMessage='Server error occurred. Please try again later.';}}else if(err.request){// Network error\nconsole.error('Network error:',err.request);errorMessage='Network error. Please check your connection and ensure the backend is running on localhost:5000.';}setError(errorMessage);}finally{setLoading(false);}};const handleAnswerSelect=useCallback(answerId=>{if(isSubmitted)return;setSelectedAnswer(answerId);},[isSubmitted]);const handleSubmitAnswer=async()=>{if(!currentQuestion||isSubmitted)return;// For multi-case matching, check if all cases have diagnoses assigned\nif(currentQuestion.question_type==='multi_case_matching'){const cases=currentQuestion.cases||[];const assignedDiagnoses=Object.keys(selectedAnswer||{});if(assignedDiagnoses.length!==cases.length){// Not all cases have been assigned\nreturn;}}else if(selectedAnswer===null){return;}setIsSubmitted(true);setShowFeedback(true);const answerData={question_id:currentQuestion.question_number,answer:selectedAnswer,time_taken:60-timeLeft,timestamp:new Date().toISOString()};try{const response=await quizAPI.submitAnswer(quiz.id,currentQuestion.id,selectedAnswer);const newAnswers=[...answers,answerData];setAnswers(newAnswers);// Use the correctness from the backend response\nconst isCorrect=response.data.correct;if(isCorrect){setStreak(prev=>prev+1);}else{setStreak(0);}setTotalTime(prev=>prev+(60-timeLeft));setTimeout(()=>{if(currentQuestionIndex<totalQuestions-1){moveToNextQuestion();}else{completeQuiz(newAnswers);}},2000);}catch(err){setError('Failed to submit answer. Please try again.');console.error('Answer submission error:',err);}};const moveToNextQuestion=()=>{setCurrentQuestionIndex(prev=>prev+1);setSelectedAnswer(null);setIsSubmitted(false);setShowFeedback(false);setTimeLeft(quizConfig!==null&&quizConfig!==void 0&&quizConfig.untimed_mode?0:(quizConfig===null||quizConfig===void 0?void 0:quizConfig.time_per_question)||60);};const completeQuiz=async finalAnswers=>{setLoading(true);try{const response=await quizAPI.getQuizResults(quiz.id);setQuizResults(response.data);if(onQuizComplete){onQuizComplete({quiz:quiz,answers:finalAnswers,results:response.data,totalTime:totalTime});}}catch(err){setError('Failed to get quiz results. Please try again.');console.error('Results fetch error:',err);}finally{setLoading(false);}};const handleTimeUp=()=>{if(!isSubmitted&&!(quizConfig!==null&&quizConfig!==void 0&&quizConfig.untimed_mode)){// Auto-submit with current selection or null if no selection (only in timed mode)\nhandleSubmitAnswer();}};const handleRestart=()=>{setCurrentQuestionIndex(0);setSelectedAnswer(null);setAnswers([]);setIsSubmitted(false);setShowFeedback(false);setQuizResults(null);setStreak(0);setTotalTime(0);setTimeLeft(quizConfig!==null&&quizConfig!==void 0&&quizConfig.untimed_mode?0:(quizConfig===null||quizConfig===void 0?void 0:quizConfig.time_per_question)||60);startQuiz();};const handleExit=()=>{if(onQuizExit){onQuizExit();}};if(loading&&!quiz){return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.loading,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.spinner}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading quiz...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.error,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:styles.buttonPrimary,onClick:handleRestart,children:\"Try Again\"})]})});}if(quizResults){return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.title,children:\"Quiz Complete!\"}),/*#__PURE__*/_jsx(\"p\",{className:styles.subtitle,children:\"Great job on completing the quiz\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.quizContainer,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.questionContainer,children:[/*#__PURE__*/_jsx(ScoreDisplay,{score:quizResults.score,totalQuestions:totalQuestions,correctAnswers:quizResults.correct_answers,timeBonus:quizResults.time_bonus,streak:streak,showDetails:true}),/*#__PURE__*/_jsxs(\"div\",{className:styles.quizControls,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.buttonSecondary,onClick:handleExit,children:\"Exit\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.buttonPrimary,onClick:handleRestart,children:\"Start New Quiz\"})]})]})})]});}if(!quiz||!currentQuestion){var _quiz$quiz_data3,_quiz$quiz_data3$ques;console.log('No quiz or current question available:',{quiz:!!quiz,currentQuestion:!!currentQuestion});return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.error,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No Quiz Available\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please configure and start a new quiz.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Debug: Quiz loaded: \",quiz?'Yes':'No',\", Questions: \",(quiz===null||quiz===void 0?void 0:(_quiz$quiz_data3=quiz.quiz_data)===null||_quiz$quiz_data3===void 0?void 0:(_quiz$quiz_data3$ques=_quiz$quiz_data3.questions)===null||_quiz$quiz_data3$ques===void 0?void 0:_quiz$quiz_data3$ques.length)||0]})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.title,children:\"Diagnosis Quiz\"}),/*#__PURE__*/_jsx(\"p\",{className:styles.subtitle,children:\"Test your knowledge\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.quizContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.quizHeader,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.quizInfo,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.infoItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.infoLabel,children:\"Question\"}),/*#__PURE__*/_jsxs(\"span\",{className:styles.infoValue,children:[currentQuestionIndex+1,\"/\",totalQuestions]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.infoItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.infoLabel,children:\"Score\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.infoValue,children:(quizResults===null||quizResults===void 0?void 0:quizResults.score)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.infoItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.infoLabel,children:\"Streak\"}),/*#__PURE__*/_jsxs(\"span\",{className:styles.infoValue,children:[streak,\" \\uD83D\\uDD25\"]})]})]}),/*#__PURE__*/_jsx(Timer,{initialTime:timeLeft,onTimeUp:handleTimeUp,isRunning:!isSubmitted,warningThreshold:10,untimed:quizConfig===null||quizConfig===void 0?void 0:quizConfig.untimed_mode})]}),/*#__PURE__*/_jsx(ProgressBar,{current:currentQuestionIndex+1,total:totalQuestions,showPercentage:true,showText:true}),/*#__PURE__*/_jsx(QuestionDisplay,{question:currentQuestion,onAnswerSelect:handleAnswerSelect,selectedAnswer:selectedAnswer,showFeedback:showFeedback,isSubmitted:isSubmitted}),/*#__PURE__*/_jsxs(\"div\",{className:styles.quizControls,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.buttonSecondary,onClick:handleExit,children:\"Exit Quiz\"}),!isSubmitted?/*#__PURE__*/_jsx(\"button\",{className:styles.buttonPrimary,onClick:handleSubmitAnswer,disabled:selectedAnswer===null,children:\"Submit Answer\"}):/*#__PURE__*/_jsx(\"div\",{className:styles.nextButtonContainer,children:currentQuestionIndex<totalQuestions-1?/*#__PURE__*/_jsx(\"span\",{className:styles.nextQuestionText,children:\"Next question in 2 seconds...\"}):/*#__PURE__*/_jsx(\"span\",{className:styles.nextQuestionText,children:\"Completing quiz...\"})})]})]})]});};export default QuizPlayer;","map":{"version":3,"names":["React","useState","useEffect","useCallback","QuestionDisplay","ProgressBar","Timer","ScoreDisplay","quizAPI","styles","jsx","_jsx","jsxs","_jsxs","QuizPlayer","_ref","_quiz$quiz_data","_quiz$quiz_data$quest","_quiz$quiz_data2","_quiz$quiz_data2$ques","quizConfig","onQuizComplete","onQuizExit","userId","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","answers","setAnswers","isSubmitted","setIsSubmitted","showFeedback","setShowFeedback","loading","setLoading","error","setError","quizResults","setQuizResults","timeLeft","setTimeLeft","streak","setStreak","totalTime","setTotalTime","currentQuestion","quiz_data","questions","totalQuestions","length","startQuiz","console","log","response","generateQuiz","data","untimed_mode","time_per_question","Error","err","errorMessage","status","message","concat","request","handleAnswerSelect","answerId","handleSubmitAnswer","question_type","cases","assignedDiagnoses","Object","keys","answerData","question_id","question_number","answer","time_taken","timestamp","Date","toISOString","submitAnswer","id","newAnswers","isCorrect","correct","prev","setTimeout","moveToNextQuestion","completeQuiz","finalAnswers","getQuizResults","results","handleTimeUp","handleRestart","handleExit","className","container","children","spinner","buttonPrimary","onClick","header","title","subtitle","quizContainer","questionContainer","score","correctAnswers","correct_answers","timeBonus","time_bonus","showDetails","quizControls","buttonSecondary","_quiz$quiz_data3","_quiz$quiz_data3$ques","quizHeader","quizInfo","infoItem","infoLabel","infoValue","initialTime","onTimeUp","isRunning","warningThreshold","untimed","current","total","showPercentage","showText","question","onAnswerSelect","disabled","nextButtonContainer","nextQuestionText"],"sources":["/home/endrawes/diagnosis_quiz_tool/frontend/src/components/QuizPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport QuestionDisplay from './QuestionDisplay';\nimport ProgressBar from './ProgressBar';\nimport Timer from './Timer';\nimport ScoreDisplay from './ScoreDisplay';\nimport { quizAPI } from '../services/api';\nimport styles from '../styles/QuizPlayer.module.css';\n\nconst QuizPlayer = ({\n  quizConfig,\n  onQuizComplete,\n  onQuizExit,\n  userId = null\n}) => {\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizResults, setQuizResults] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [streak, setStreak] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n\n  const currentQuestion = quiz?.quiz_data?.questions?.[currentQuestionIndex];\n  const totalQuestions = quiz?.quiz_data?.questions?.length || 0;\n\n  useEffect(() => {\n    if (quizConfig) {\n      startQuiz();\n    }\n  }, [quizConfig]);\n\n  const startQuiz = async () => {\n    console.log('startQuiz called with config:', quizConfig);\n    setLoading(true);\n    setError(null);\n\n    try {\n      console.log('Calling quizAPI.generateQuiz...');\n      const response = await quizAPI.generateQuiz(quizConfig);\n      console.log('API response received:', response);\n      console.log('Response data:', response.data);\n\n      if (response.data && response.data.quiz_data) {\n        setQuiz(response.data);\n        setTimeLeft(quizConfig.untimed_mode ? 0 : (quizConfig.time_per_question || 60));\n      } else {\n        throw new Error('Invalid response format: missing quiz_data');\n      }\n    } catch (err) {\n      console.error('Quiz generation error:', err);\n      let errorMessage = 'Failed to load quiz. Please try again.';\n\n      if (err.response) {\n        // Server responded with error\n        console.error('Response status:', err.response.status);\n        console.error('Response data:', err.response.data);\n        if (err.response.data && err.response.data.message) {\n          errorMessage = `Quiz generation failed: ${err.response.data.message}`;\n        } else if (err.response.status === 404) {\n          errorMessage = 'Quiz service not found. Please check if the backend is running.';\n        } else if (err.response.status === 500) {\n          errorMessage = 'Server error occurred. Please try again later.';\n        }\n      } else if (err.request) {\n        // Network error\n        console.error('Network error:', err.request);\n        errorMessage = 'Network error. Please check your connection and ensure the backend is running on localhost:5000.';\n      }\n\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerSelect = useCallback((answerId) => {\n    if (isSubmitted) return;\n    setSelectedAnswer(answerId);\n  }, [isSubmitted]);\n\n  const handleSubmitAnswer = async () => {\n    if (!currentQuestion || isSubmitted) return;\n\n    // For multi-case matching, check if all cases have diagnoses assigned\n    if (currentQuestion.question_type === 'multi_case_matching') {\n      const cases = currentQuestion.cases || [];\n      const assignedDiagnoses = Object.keys(selectedAnswer || {});\n      if (assignedDiagnoses.length !== cases.length) {\n        // Not all cases have been assigned\n        return;\n      }\n    } else if (selectedAnswer === null) {\n      return;\n    }\n\n    setIsSubmitted(true);\n    setShowFeedback(true);\n\n    const answerData = {\n      question_id: currentQuestion.question_number,\n      answer: selectedAnswer,\n      time_taken: (60 - timeLeft),\n      timestamp: new Date().toISOString()\n    };\n\n    try {\n      const response = await quizAPI.submitAnswer(quiz.id, currentQuestion.id, selectedAnswer);\n\n      const newAnswers = [...answers, answerData];\n      setAnswers(newAnswers);\n\n      // Use the correctness from the backend response\n      const isCorrect = response.data.correct;\n\n      if (isCorrect) {\n        setStreak(prev => prev + 1);\n      } else {\n        setStreak(0);\n      }\n\n      setTotalTime(prev => prev + (60 - timeLeft));\n\n      setTimeout(() => {\n        if (currentQuestionIndex < totalQuestions - 1) {\n          moveToNextQuestion();\n        } else {\n          completeQuiz(newAnswers);\n        }\n      }, 2000);\n\n    } catch (err) {\n      setError('Failed to submit answer. Please try again.');\n      console.error('Answer submission error:', err);\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    setCurrentQuestionIndex(prev => prev + 1);\n    setSelectedAnswer(null);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setTimeLeft(quizConfig?.untimed_mode ? 0 : (quizConfig?.time_per_question || 60));\n  };\n\n  const completeQuiz = async (finalAnswers) => {\n    setLoading(true);\n    \n    try {\n      const response = await quizAPI.getQuizResults(quiz.id);\n      setQuizResults(response.data);\n      \n      if (onQuizComplete) {\n        onQuizComplete({\n          quiz: quiz,\n          answers: finalAnswers,\n          results: response.data,\n          totalTime: totalTime\n        });\n      }\n    } catch (err) {\n      setError('Failed to get quiz results. Please try again.');\n      console.error('Results fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTimeUp = () => {\n    if (!isSubmitted && !quizConfig?.untimed_mode) {\n      // Auto-submit with current selection or null if no selection (only in timed mode)\n      handleSubmitAnswer();\n    }\n  };\n\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setAnswers([]);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setQuizResults(null);\n    setStreak(0);\n    setTotalTime(0);\n    setTimeLeft(quizConfig?.untimed_mode ? 0 : (quizConfig?.time_per_question || 60));\n    startQuiz();\n  };\n\n  const handleExit = () => {\n    if (onQuizExit) {\n      onQuizExit();\n    }\n  };\n\n  if (loading && !quiz) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.loading}>\n          <div className={styles.spinner}></div>\n          <p>Loading quiz...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.error}>\n          <h3>Error</h3>\n          <p>{error}</p>\n          <button className={styles.buttonPrimary} onClick={handleRestart}>\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (quizResults) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Quiz Complete!</h1>\n          <p className={styles.subtitle}>Great job on completing the quiz</p>\n        </div>\n        \n        <div className={styles.quizContainer}>\n          <div className={styles.questionContainer}>\n            <ScoreDisplay\n              score={quizResults.score}\n              totalQuestions={totalQuestions}\n              correctAnswers={quizResults.correct_answers}\n              timeBonus={quizResults.time_bonus}\n              streak={streak}\n              showDetails={true}\n            />\n            \n            <div className={styles.quizControls}>\n              <button className={styles.buttonSecondary} onClick={handleExit}>\n                Exit\n              </button>\n              <button className={styles.buttonPrimary} onClick={handleRestart}>\n                Start New Quiz\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!quiz || !currentQuestion) {\n    console.log('No quiz or current question available:', { quiz: !!quiz, currentQuestion: !!currentQuestion });\n    return (\n      <div className={styles.container}>\n        <div className={styles.error}>\n          <h3>No Quiz Available</h3>\n          <p>Please configure and start a new quiz.</p>\n          <p>Debug: Quiz loaded: {quiz ? 'Yes' : 'No'}, Questions: {quiz?.quiz_data?.questions?.length || 0}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <h1 className={styles.title}>Diagnosis Quiz</h1>\n         <p className={styles.subtitle}>Test your knowledge</p>\n      </div>\n\n      <div className={styles.quizContainer}>\n        <div className={styles.quizHeader}>\n          <div className={styles.quizInfo}>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Question</span>\n              <span className={styles.infoValue}>\n                {currentQuestionIndex + 1}/{totalQuestions}\n              </span>\n            </div>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Score</span>\n              <span className={styles.infoValue}>\n                {quizResults?.score || 0}\n              </span>\n            </div>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Streak</span>\n              <span className={styles.infoValue}>\n                {streak} 🔥\n              </span>\n            </div>\n          </div>\n          \n           <Timer\n             initialTime={timeLeft}\n             onTimeUp={handleTimeUp}\n             isRunning={!isSubmitted}\n             warningThreshold={10}\n             untimed={quizConfig?.untimed_mode}\n           />\n        </div>\n\n        <ProgressBar\n          current={currentQuestionIndex + 1}\n          total={totalQuestions}\n          showPercentage={true}\n          showText={true}\n        />\n\n        <QuestionDisplay\n          question={currentQuestion}\n          onAnswerSelect={handleAnswerSelect}\n          selectedAnswer={selectedAnswer}\n          showFeedback={showFeedback}\n          isSubmitted={isSubmitted}\n        />\n\n        <div className={styles.quizControls}>\n          <button className={styles.buttonSecondary} onClick={handleExit}>\n            Exit Quiz\n          </button>\n          \n          {!isSubmitted ? (\n            <button \n              className={styles.buttonPrimary}\n              onClick={handleSubmitAnswer}\n              disabled={selectedAnswer === null}\n            >\n              Submit Answer\n            </button>\n          ) : (\n            <div className={styles.nextButtonContainer}>\n              {currentQuestionIndex < totalQuestions - 1 ? (\n                <span className={styles.nextQuestionText}>\n                  Next question in 2 seconds...\n                </span>\n              ) : (\n                <span className={styles.nextQuestionText}>\n                  Completing quiz...\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}