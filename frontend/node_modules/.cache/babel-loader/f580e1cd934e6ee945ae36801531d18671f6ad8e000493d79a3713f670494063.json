{"ast":null,"code":"var _jsxFileName = \"/home/endrawes/diagnosis_quiz_tool/frontend/src/components/QuizPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport QuestionDisplay from './QuestionDisplay';\nimport ProgressBar from './ProgressBar';\nimport Timer from './Timer';\nimport ScoreDisplay from './ScoreDisplay';\nimport { quizAPI } from '../services/api';\nimport styles from '../styles/QuizPlayer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPlayer = ({\n  quizConfig,\n  onQuizComplete,\n  onQuizExit,\n  userId = null\n}) => {\n  _s();\n  var _quiz$quiz_data, _quiz$quiz_data$quest, _quiz$quiz_data2, _quiz$quiz_data2$ques;\n  console.log('QuizPlayer component rendered with:', {\n    quizConfig,\n    userId\n  });\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  // Debug quiz state changes\n  useEffect(() => {\n    console.log('Quiz state changed:', quiz);\n  }, [quiz]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizResults, setQuizResults] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [streak, setStreak] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n  const currentQuestion = quiz === null || quiz === void 0 ? void 0 : (_quiz$quiz_data = quiz.quiz_data) === null || _quiz$quiz_data === void 0 ? void 0 : (_quiz$quiz_data$quest = _quiz$quiz_data.questions) === null || _quiz$quiz_data$quest === void 0 ? void 0 : _quiz$quiz_data$quest[currentQuestionIndex];\n  const totalQuestions = (quiz === null || quiz === void 0 ? void 0 : (_quiz$quiz_data2 = quiz.quiz_data) === null || _quiz$quiz_data2 === void 0 ? void 0 : (_quiz$quiz_data2$ques = _quiz$quiz_data2.questions) === null || _quiz$quiz_data2$ques === void 0 ? void 0 : _quiz$quiz_data2$ques.length) || 0;\n  useEffect(() => {\n    console.log('QuizPlayer useEffect triggered, quizConfig:', quizConfig);\n    if (quizConfig) {\n      console.log('Calling startQuiz from useEffect');\n      startQuiz();\n    } else {\n      console.log('No quizConfig provided');\n    }\n  }, [quizConfig]);\n  const startQuiz = async () => {\n    console.log('startQuiz called with config:', quizConfig);\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Calling quizAPI.generateQuiz...');\n      const response = await quizAPI.generateQuiz(quizConfig);\n      console.log('API response received:', response);\n      console.log('Response data:', response.data);\n      if (response.data && response.data.quiz_data) {\n        console.log('Setting quiz data...');\n        setQuiz(response.data);\n        setTimeLeft(quizConfig.time_per_question || 60);\n        console.log('Quiz state updated successfully');\n      } else {\n        throw new Error('Invalid response format: missing quiz_data');\n      }\n    } catch (err) {\n      console.error('Quiz generation error:', err);\n      let errorMessage = 'Failed to load quiz. Please try again.';\n      if (err.response) {\n        // Server responded with error\n        console.error('Response status:', err.response.status);\n        console.error('Response data:', err.response.data);\n        if (err.response.data && err.response.data.message) {\n          errorMessage = `Quiz generation failed: ${err.response.data.message}`;\n        } else if (err.response.status === 404) {\n          errorMessage = 'Quiz service not found. Please check if the backend is running.';\n        } else if (err.response.status === 500) {\n          errorMessage = 'Server error occurred. Please try again later.';\n        }\n      } else if (err.request) {\n        // Network error\n        console.error('Network error:', err.request);\n        errorMessage = 'Network error. Please check your connection and ensure the backend is running on localhost:5000.';\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = useCallback(answerId => {\n    if (isSubmitted) return;\n    setSelectedAnswer(answerId);\n  }, [isSubmitted]);\n  const handleSubmitAnswer = async () => {\n    if (!currentQuestion || selectedAnswer === null || isSubmitted) return;\n    setIsSubmitted(true);\n    setShowFeedback(true);\n    const answerData = {\n      question_id: currentQuestion.question_number,\n      answer: selectedAnswer,\n      time_taken: 60 - timeLeft,\n      timestamp: new Date().toISOString()\n    };\n    try {\n      await quizAPI.submitAnswer(quiz.id, currentQuestion.id, selectedAnswer);\n      const newAnswers = [...answers, answerData];\n      setAnswers(newAnswers);\n      const isCorrect = selectedAnswer === currentQuestion.correct_index;\n      if (isCorrect) {\n        setStreak(prev => prev + 1);\n      } else {\n        setStreak(0);\n      }\n      setTotalTime(prev => prev + (60 - timeLeft));\n      setTimeout(() => {\n        if (currentQuestionIndex < totalQuestions - 1) {\n          moveToNextQuestion();\n        } else {\n          completeQuiz(newAnswers);\n        }\n      }, 2000);\n    } catch (err) {\n      setError('Failed to submit answer. Please try again.');\n      console.error('Answer submission error:', err);\n    }\n  };\n  const moveToNextQuestion = () => {\n    setCurrentQuestionIndex(prev => prev + 1);\n    setSelectedAnswer(null);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setTimeLeft((quizConfig === null || quizConfig === void 0 ? void 0 : quizConfig.time_per_question) || 60);\n  };\n  const completeQuiz = async finalAnswers => {\n    setLoading(true);\n    try {\n      const response = await quizAPI.getQuizResults(quiz.id);\n      setQuizResults(response.data);\n      if (onQuizComplete) {\n        onQuizComplete({\n          quiz: quiz,\n          answers: finalAnswers,\n          results: response.data,\n          totalTime: totalTime\n        });\n      }\n    } catch (err) {\n      setError('Failed to get quiz results. Please try again.');\n      console.error('Results fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTimeUp = () => {\n    if (!isSubmitted) {\n      // Auto-submit with current selection or null if no selection\n      handleSubmitAnswer();\n    }\n  };\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setAnswers([]);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setQuizResults(null);\n    setStreak(0);\n    setTotalTime(0);\n    setTimeLeft((quizConfig === null || quizConfig === void 0 ? void 0 : quizConfig.time_per_question) || 60);\n    startQuiz();\n  };\n  const handleExit = () => {\n    if (onQuizExit) {\n      onQuizExit();\n    }\n  };\n  if (loading && !quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.spinner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading quiz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonPrimary,\n          onClick: handleRestart,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  }\n  if (quizResults) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.title,\n          children: \"Quiz Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.subtitle,\n          children: \"Great job on completing the quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quizContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questionContainer,\n          children: [/*#__PURE__*/_jsxDEV(ScoreDisplay, {\n            score: quizResults.score,\n            totalQuestions: totalQuestions,\n            correctAnswers: quizResults.correct_answers,\n            timeBonus: quizResults.time_bonus,\n            streak: streak,\n            showDetails: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.quizControls,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.buttonSecondary,\n              onClick: handleExit,\n              children: \"Exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.buttonPrimary,\n              onClick: handleRestart,\n              children: \"Start New Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n  if (!quiz || !currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Quiz Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please configure and start a new quiz.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Diagnosis Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.subtitle,\n        children: \"Test your medical knowledge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.quizContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quizHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.quizInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoLabel,\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoValue,\n              children: [currentQuestionIndex + 1, \"/\", totalQuestions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoLabel,\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoValue,\n              children: (quizResults === null || quizResults === void 0 ? void 0 : quizResults.score) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoLabel,\n              children: \"Streak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoValue,\n              children: [streak, \" \\uD83D\\uDD25\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          initialTime: timeLeft,\n          onTimeUp: handleTimeUp,\n          isRunning: !isSubmitted,\n          warningThreshold: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: currentQuestionIndex + 1,\n        total: totalQuestions,\n        showPercentage: true,\n        showText: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionDisplay, {\n        question: currentQuestion,\n        onAnswerSelect: handleAnswerSelect,\n        selectedAnswer: selectedAnswer,\n        showFeedback: showFeedback,\n        isSubmitted: isSubmitted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quizControls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonSecondary,\n          onClick: handleExit,\n          children: \"Exit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), !isSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonPrimary,\n          onClick: handleSubmitAnswer,\n          disabled: selectedAnswer === null,\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.nextButtonContainer,\n          children: currentQuestionIndex < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.nextQuestionText,\n            children: \"Next question in 2 seconds...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.nextQuestionText,\n            children: \"Completing quiz...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPlayer, \"R8IRsopLiZwS1DpBraG8hQ8fTD0=\");\n_c = QuizPlayer;\nexport default QuizPlayer;\nvar _c;\n$RefreshReg$(_c, \"QuizPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","QuestionDisplay","ProgressBar","Timer","ScoreDisplay","quizAPI","styles","jsxDEV","_jsxDEV","QuizPlayer","quizConfig","onQuizComplete","onQuizExit","userId","_s","_quiz$quiz_data","_quiz$quiz_data$quest","_quiz$quiz_data2","_quiz$quiz_data2$ques","console","log","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","answers","setAnswers","isSubmitted","setIsSubmitted","showFeedback","setShowFeedback","loading","setLoading","error","setError","quizResults","setQuizResults","timeLeft","setTimeLeft","streak","setStreak","totalTime","setTotalTime","currentQuestion","quiz_data","questions","totalQuestions","length","startQuiz","response","generateQuiz","data","time_per_question","Error","err","errorMessage","status","message","request","handleAnswerSelect","answerId","handleSubmitAnswer","answerData","question_id","question_number","answer","time_taken","timestamp","Date","toISOString","submitAnswer","id","newAnswers","isCorrect","correct_index","prev","setTimeout","moveToNextQuestion","completeQuiz","finalAnswers","getQuizResults","results","handleTimeUp","handleRestart","handleExit","className","container","children","spinner","fileName","_jsxFileName","lineNumber","columnNumber","buttonPrimary","onClick","header","title","subtitle","quizContainer","questionContainer","score","correctAnswers","correct_answers","timeBonus","time_bonus","showDetails","quizControls","buttonSecondary","quizHeader","quizInfo","infoItem","infoLabel","infoValue","initialTime","onTimeUp","isRunning","warningThreshold","current","total","showPercentage","showText","question","onAnswerSelect","disabled","nextButtonContainer","nextQuestionText","_c","$RefreshReg$"],"sources":["/home/endrawes/diagnosis_quiz_tool/frontend/src/components/QuizPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport QuestionDisplay from './QuestionDisplay';\nimport ProgressBar from './ProgressBar';\nimport Timer from './Timer';\nimport ScoreDisplay from './ScoreDisplay';\nimport { quizAPI } from '../services/api';\nimport styles from '../styles/QuizPlayer.module.css';\n\nconst QuizPlayer = ({\n  quizConfig,\n  onQuizComplete,\n  onQuizExit,\n  userId = null\n}) => {\n  console.log('QuizPlayer component rendered with:', { quizConfig, userId });\n\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  // Debug quiz state changes\n  useEffect(() => {\n    console.log('Quiz state changed:', quiz);\n  }, [quiz]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizResults, setQuizResults] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [streak, setStreak] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n\n  const currentQuestion = quiz?.quiz_data?.questions?.[currentQuestionIndex];\n  const totalQuestions = quiz?.quiz_data?.questions?.length || 0;\n\n  useEffect(() => {\n    console.log('QuizPlayer useEffect triggered, quizConfig:', quizConfig);\n    if (quizConfig) {\n      console.log('Calling startQuiz from useEffect');\n      startQuiz();\n    } else {\n      console.log('No quizConfig provided');\n    }\n  }, [quizConfig]);\n\n  const startQuiz = async () => {\n    console.log('startQuiz called with config:', quizConfig);\n    setLoading(true);\n    setError(null);\n\n    try {\n      console.log('Calling quizAPI.generateQuiz...');\n      const response = await quizAPI.generateQuiz(quizConfig);\n      console.log('API response received:', response);\n      console.log('Response data:', response.data);\n\n      if (response.data && response.data.quiz_data) {\n        console.log('Setting quiz data...');\n        setQuiz(response.data);\n        setTimeLeft(quizConfig.time_per_question || 60);\n        console.log('Quiz state updated successfully');\n      } else {\n        throw new Error('Invalid response format: missing quiz_data');\n      }\n    } catch (err) {\n      console.error('Quiz generation error:', err);\n      let errorMessage = 'Failed to load quiz. Please try again.';\n\n      if (err.response) {\n        // Server responded with error\n        console.error('Response status:', err.response.status);\n        console.error('Response data:', err.response.data);\n        if (err.response.data && err.response.data.message) {\n          errorMessage = `Quiz generation failed: ${err.response.data.message}`;\n        } else if (err.response.status === 404) {\n          errorMessage = 'Quiz service not found. Please check if the backend is running.';\n        } else if (err.response.status === 500) {\n          errorMessage = 'Server error occurred. Please try again later.';\n        }\n      } else if (err.request) {\n        // Network error\n        console.error('Network error:', err.request);\n        errorMessage = 'Network error. Please check your connection and ensure the backend is running on localhost:5000.';\n      }\n\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerSelect = useCallback((answerId) => {\n    if (isSubmitted) return;\n    setSelectedAnswer(answerId);\n  }, [isSubmitted]);\n\n  const handleSubmitAnswer = async () => {\n    if (!currentQuestion || selectedAnswer === null || isSubmitted) return;\n\n    setIsSubmitted(true);\n    setShowFeedback(true);\n\n    const answerData = {\n      question_id: currentQuestion.question_number,\n      answer: selectedAnswer,\n      time_taken: (60 - timeLeft),\n      timestamp: new Date().toISOString()\n    };\n\n    try {\n      await quizAPI.submitAnswer(quiz.id, currentQuestion.id, selectedAnswer);\n      \n      const newAnswers = [...answers, answerData];\n      setAnswers(newAnswers);\n\n      const isCorrect = selectedAnswer === currentQuestion.correct_index;\n      if (isCorrect) {\n        setStreak(prev => prev + 1);\n      } else {\n        setStreak(0);\n      }\n\n      setTotalTime(prev => prev + (60 - timeLeft));\n\n      setTimeout(() => {\n        if (currentQuestionIndex < totalQuestions - 1) {\n          moveToNextQuestion();\n        } else {\n          completeQuiz(newAnswers);\n        }\n      }, 2000);\n\n    } catch (err) {\n      setError('Failed to submit answer. Please try again.');\n      console.error('Answer submission error:', err);\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    setCurrentQuestionIndex(prev => prev + 1);\n    setSelectedAnswer(null);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setTimeLeft(quizConfig?.time_per_question || 60);\n  };\n\n  const completeQuiz = async (finalAnswers) => {\n    setLoading(true);\n    \n    try {\n      const response = await quizAPI.getQuizResults(quiz.id);\n      setQuizResults(response.data);\n      \n      if (onQuizComplete) {\n        onQuizComplete({\n          quiz: quiz,\n          answers: finalAnswers,\n          results: response.data,\n          totalTime: totalTime\n        });\n      }\n    } catch (err) {\n      setError('Failed to get quiz results. Please try again.');\n      console.error('Results fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTimeUp = () => {\n    if (!isSubmitted) {\n      // Auto-submit with current selection or null if no selection\n      handleSubmitAnswer();\n    }\n  };\n\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setAnswers([]);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setQuizResults(null);\n    setStreak(0);\n    setTotalTime(0);\n    setTimeLeft(quizConfig?.time_per_question || 60);\n    startQuiz();\n  };\n\n  const handleExit = () => {\n    if (onQuizExit) {\n      onQuizExit();\n    }\n  };\n\n  if (loading && !quiz) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.loading}>\n          <div className={styles.spinner}></div>\n          <p>Loading quiz...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.error}>\n          <h3>Error</h3>\n          <p>{error}</p>\n          <button className={styles.buttonPrimary} onClick={handleRestart}>\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (quizResults) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Quiz Complete!</h1>\n          <p className={styles.subtitle}>Great job on completing the quiz</p>\n        </div>\n        \n        <div className={styles.quizContainer}>\n          <div className={styles.questionContainer}>\n            <ScoreDisplay\n              score={quizResults.score}\n              totalQuestions={totalQuestions}\n              correctAnswers={quizResults.correct_answers}\n              timeBonus={quizResults.time_bonus}\n              streak={streak}\n              showDetails={true}\n            />\n            \n            <div className={styles.quizControls}>\n              <button className={styles.buttonSecondary} onClick={handleExit}>\n                Exit\n              </button>\n              <button className={styles.buttonPrimary} onClick={handleRestart}>\n                Start New Quiz\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!quiz || !currentQuestion) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.error}>\n          <h3>No Quiz Available</h3>\n          <p>Please configure and start a new quiz.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <h1 className={styles.title}>Diagnosis Quiz</h1>\n        <p className={styles.subtitle}>Test your medical knowledge</p>\n      </div>\n\n      <div className={styles.quizContainer}>\n        <div className={styles.quizHeader}>\n          <div className={styles.quizInfo}>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Question</span>\n              <span className={styles.infoValue}>\n                {currentQuestionIndex + 1}/{totalQuestions}\n              </span>\n            </div>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Score</span>\n              <span className={styles.infoValue}>\n                {quizResults?.score || 0}\n              </span>\n            </div>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Streak</span>\n              <span className={styles.infoValue}>\n                {streak} 🔥\n              </span>\n            </div>\n          </div>\n          \n          <Timer\n            initialTime={timeLeft}\n            onTimeUp={handleTimeUp}\n            isRunning={!isSubmitted}\n            warningThreshold={10}\n          />\n        </div>\n\n        <ProgressBar\n          current={currentQuestionIndex + 1}\n          total={totalQuestions}\n          showPercentage={true}\n          showText={true}\n        />\n\n        <QuestionDisplay\n          question={currentQuestion}\n          onAnswerSelect={handleAnswerSelect}\n          selectedAnswer={selectedAnswer}\n          showFeedback={showFeedback}\n          isSubmitted={isSubmitted}\n        />\n\n        <div className={styles.quizControls}>\n          <button className={styles.buttonSecondary} onClick={handleExit}>\n            Exit Quiz\n          </button>\n          \n          {!isSubmitted ? (\n            <button \n              className={styles.buttonPrimary}\n              onClick={handleSubmitAnswer}\n              disabled={selectedAnswer === null}\n            >\n              Submit Answer\n            </button>\n          ) : (\n            <div className={styles.nextButtonContainer}>\n              {currentQuestionIndex < totalQuestions - 1 ? (\n                <span className={styles.nextQuestionText}>\n                  Next question in 2 seconds...\n                </span>\n              ) : (\n                <span className={styles.nextQuestionText}>\n                  Completing quiz...\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}