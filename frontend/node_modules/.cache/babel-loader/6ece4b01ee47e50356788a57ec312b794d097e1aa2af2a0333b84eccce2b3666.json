{"ast":null,"code":"var _jsxFileName = \"/home/endrawes/diagnosis_quiz_tool/frontend/src/components/QuizPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport QuestionDisplay from './QuestionDisplay';\nimport ProgressBar from './ProgressBar';\nimport Timer from './Timer';\nimport ScoreDisplay from './ScoreDisplay';\nimport { quizAPI } from '../services/api';\nimport styles from '../styles/QuizPlayer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPlayer = ({\n  quizConfig,\n  onQuizComplete,\n  onQuizExit,\n  userId = null\n}) => {\n  _s();\n  var _quiz$quiz_data, _quiz$quiz_data$quest, _quiz$quiz_data2, _quiz$quiz_data2$ques;\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizResults, setQuizResults] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [streak, setStreak] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n  const currentQuestion = quiz === null || quiz === void 0 ? void 0 : (_quiz$quiz_data = quiz.quiz_data) === null || _quiz$quiz_data === void 0 ? void 0 : (_quiz$quiz_data$quest = _quiz$quiz_data.questions) === null || _quiz$quiz_data$quest === void 0 ? void 0 : _quiz$quiz_data$quest[currentQuestionIndex];\n  const totalQuestions = (quiz === null || quiz === void 0 ? void 0 : (_quiz$quiz_data2 = quiz.quiz_data) === null || _quiz$quiz_data2 === void 0 ? void 0 : (_quiz$quiz_data2$ques = _quiz$quiz_data2.questions) === null || _quiz$quiz_data2$ques === void 0 ? void 0 : _quiz$quiz_data2$ques.length) || 0;\n  useEffect(() => {\n    if (quizConfig) {\n      startQuiz();\n    }\n  }, [quizConfig]);\n  const startQuiz = async () => {\n    console.log('startQuiz called with config:', quizConfig);\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Calling quizAPI.generateQuiz...');\n      const response = await quizAPI.generateQuiz(quizConfig);\n      console.log('API response received:', response);\n      console.log('Response data:', response.data);\n      if (response.data && response.data.quiz_data) {\n        console.log('Setting quiz data...');\n        setQuiz(response.data);\n        setTimeLeft(quizConfig.time_per_question || 60);\n        console.log('Quiz state updated successfully');\n      } else {\n        throw new Error('Invalid response format: missing quiz_data');\n      }\n    } catch (err) {\n      console.error('Quiz generation error:', err);\n      let errorMessage = 'Failed to load quiz. Please try again.';\n      if (err.response) {\n        // Server responded with error\n        console.error('Response status:', err.response.status);\n        console.error('Response data:', err.response.data);\n        if (err.response.data && err.response.data.message) {\n          errorMessage = `Quiz generation failed: ${err.response.data.message}`;\n        } else if (err.response.status === 404) {\n          errorMessage = 'Quiz service not found. Please check if the backend is running.';\n        } else if (err.response.status === 500) {\n          errorMessage = 'Server error occurred. Please try again later.';\n        }\n      } else if (err.request) {\n        // Network error\n        console.error('Network error:', err.request);\n        errorMessage = 'Network error. Please check your connection and ensure the backend is running on localhost:5000.';\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = useCallback(answerId => {\n    if (isSubmitted) return;\n    setSelectedAnswer(answerId);\n  }, [isSubmitted]);\n  const handleSubmitAnswer = async () => {\n    if (!currentQuestion || selectedAnswer === null || isSubmitted) return;\n    setIsSubmitted(true);\n    setShowFeedback(true);\n    const answerData = {\n      question_id: currentQuestion.question_number,\n      answer: selectedAnswer,\n      time_taken: 60 - timeLeft,\n      timestamp: new Date().toISOString()\n    };\n    try {\n      await quizAPI.submitAnswer(quiz.id, currentQuestion.id, selectedAnswer);\n      const newAnswers = [...answers, answerData];\n      setAnswers(newAnswers);\n      const isCorrect = selectedAnswer === currentQuestion.correct_index;\n      if (isCorrect) {\n        setStreak(prev => prev + 1);\n      } else {\n        setStreak(0);\n      }\n      setTotalTime(prev => prev + (60 - timeLeft));\n      setTimeout(() => {\n        if (currentQuestionIndex < totalQuestions - 1) {\n          moveToNextQuestion();\n        } else {\n          completeQuiz(newAnswers);\n        }\n      }, 2000);\n    } catch (err) {\n      setError('Failed to submit answer. Please try again.');\n      console.error('Answer submission error:', err);\n    }\n  };\n  const moveToNextQuestion = () => {\n    setCurrentQuestionIndex(prev => prev + 1);\n    setSelectedAnswer(null);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setTimeLeft((quizConfig === null || quizConfig === void 0 ? void 0 : quizConfig.time_per_question) || 60);\n  };\n  const completeQuiz = async finalAnswers => {\n    setLoading(true);\n    try {\n      const response = await quizAPI.getQuizResults(quiz.id);\n      setQuizResults(response.data);\n      if (onQuizComplete) {\n        onQuizComplete({\n          quiz: quiz,\n          answers: finalAnswers,\n          results: response.data,\n          totalTime: totalTime\n        });\n      }\n    } catch (err) {\n      setError('Failed to get quiz results. Please try again.');\n      console.error('Results fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTimeUp = () => {\n    if (!isSubmitted) {\n      // Auto-submit with current selection or null if no selection\n      handleSubmitAnswer();\n    }\n  };\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setAnswers([]);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setQuizResults(null);\n    setStreak(0);\n    setTotalTime(0);\n    setTimeLeft((quizConfig === null || quizConfig === void 0 ? void 0 : quizConfig.time_per_question) || 60);\n    startQuiz();\n  };\n  const handleExit = () => {\n    if (onQuizExit) {\n      onQuizExit();\n    }\n  };\n  if (loading && !quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.spinner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading quiz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonPrimary,\n          onClick: handleRestart,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n  if (quizResults) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.title,\n          children: \"Quiz Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.subtitle,\n          children: \"Great job on completing the quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quizContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questionContainer,\n          children: [/*#__PURE__*/_jsxDEV(ScoreDisplay, {\n            score: quizResults.score,\n            totalQuestions: totalQuestions,\n            correctAnswers: quizResults.correct_answers,\n            timeBonus: quizResults.time_bonus,\n            streak: streak,\n            showDetails: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.quizControls,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.buttonSecondary,\n              onClick: handleExit,\n              children: \"Exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.buttonPrimary,\n              onClick: handleRestart,\n              children: \"Start New Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  }\n  if (!quiz || !currentQuestion) {\n    var _quiz$quiz_data3, _quiz$quiz_data3$ques;\n    console.log('No quiz or current question available:', {\n      quiz: !!quiz,\n      currentQuestion: !!currentQuestion\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Quiz Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please configure and start a new quiz.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Debug: Quiz loaded: \", quiz ? 'Yes' : 'No', \", Questions: \", (quiz === null || quiz === void 0 ? void 0 : (_quiz$quiz_data3 = quiz.quiz_data) === null || _quiz$quiz_data3 === void 0 ? void 0 : (_quiz$quiz_data3$ques = _quiz$quiz_data3.questions) === null || _quiz$quiz_data3$ques === void 0 ? void 0 : _quiz$quiz_data3$ques.length) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Diagnosis Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.subtitle,\n        children: \"Test your medical knowledge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.quizContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quizHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.quizInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoLabel,\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoValue,\n              children: [currentQuestionIndex + 1, \"/\", totalQuestions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoLabel,\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoValue,\n              children: (quizResults === null || quizResults === void 0 ? void 0 : quizResults.score) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoLabel,\n              children: \"Streak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.infoValue,\n              children: [streak, \" \\uD83D\\uDD25\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          initialTime: timeLeft,\n          onTimeUp: handleTimeUp,\n          isRunning: !isSubmitted,\n          warningThreshold: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: currentQuestionIndex + 1,\n        total: totalQuestions,\n        showPercentage: true,\n        showText: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionDisplay, {\n        question: currentQuestion,\n        onAnswerSelect: handleAnswerSelect,\n        selectedAnswer: selectedAnswer,\n        showFeedback: showFeedback,\n        isSubmitted: isSubmitted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quizControls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonSecondary,\n          onClick: handleExit,\n          children: \"Exit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), !isSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonPrimary,\n          onClick: handleSubmitAnswer,\n          disabled: selectedAnswer === null,\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.nextButtonContainer,\n          children: currentQuestionIndex < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.nextQuestionText,\n            children: \"Next question in 2 seconds...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.nextQuestionText,\n            children: \"Completing quiz...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPlayer, \"DYExewvSqrq26/8s3zMURIpDHp0=\");\n_c = QuizPlayer;\nexport default QuizPlayer;\nvar _c;\n$RefreshReg$(_c, \"QuizPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","QuestionDisplay","ProgressBar","Timer","ScoreDisplay","quizAPI","styles","jsxDEV","_jsxDEV","QuizPlayer","quizConfig","onQuizComplete","onQuizExit","userId","_s","_quiz$quiz_data","_quiz$quiz_data$quest","_quiz$quiz_data2","_quiz$quiz_data2$ques","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","answers","setAnswers","isSubmitted","setIsSubmitted","showFeedback","setShowFeedback","loading","setLoading","error","setError","quizResults","setQuizResults","timeLeft","setTimeLeft","streak","setStreak","totalTime","setTotalTime","currentQuestion","quiz_data","questions","totalQuestions","length","startQuiz","console","log","response","generateQuiz","data","time_per_question","Error","err","errorMessage","status","message","request","handleAnswerSelect","answerId","handleSubmitAnswer","answerData","question_id","question_number","answer","time_taken","timestamp","Date","toISOString","submitAnswer","id","newAnswers","isCorrect","correct_index","prev","setTimeout","moveToNextQuestion","completeQuiz","finalAnswers","getQuizResults","results","handleTimeUp","handleRestart","handleExit","className","container","children","spinner","fileName","_jsxFileName","lineNumber","columnNumber","buttonPrimary","onClick","header","title","subtitle","quizContainer","questionContainer","score","correctAnswers","correct_answers","timeBonus","time_bonus","showDetails","quizControls","buttonSecondary","_quiz$quiz_data3","_quiz$quiz_data3$ques","quizHeader","quizInfo","infoItem","infoLabel","infoValue","initialTime","onTimeUp","isRunning","warningThreshold","current","total","showPercentage","showText","question","onAnswerSelect","disabled","nextButtonContainer","nextQuestionText","_c","$RefreshReg$"],"sources":["/home/endrawes/diagnosis_quiz_tool/frontend/src/components/QuizPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport QuestionDisplay from './QuestionDisplay';\nimport ProgressBar from './ProgressBar';\nimport Timer from './Timer';\nimport ScoreDisplay from './ScoreDisplay';\nimport { quizAPI } from '../services/api';\nimport styles from '../styles/QuizPlayer.module.css';\n\nconst QuizPlayer = ({\n  quizConfig,\n  onQuizComplete,\n  onQuizExit,\n  userId = null\n}) => {\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quizResults, setQuizResults] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [streak, setStreak] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n\n  const currentQuestion = quiz?.quiz_data?.questions?.[currentQuestionIndex];\n  const totalQuestions = quiz?.quiz_data?.questions?.length || 0;\n\n  useEffect(() => {\n    if (quizConfig) {\n      startQuiz();\n    }\n  }, [quizConfig]);\n\n  const startQuiz = async () => {\n    console.log('startQuiz called with config:', quizConfig);\n    setLoading(true);\n    setError(null);\n\n    try {\n      console.log('Calling quizAPI.generateQuiz...');\n      const response = await quizAPI.generateQuiz(quizConfig);\n      console.log('API response received:', response);\n      console.log('Response data:', response.data);\n\n      if (response.data && response.data.quiz_data) {\n        console.log('Setting quiz data...');\n        setQuiz(response.data);\n        setTimeLeft(quizConfig.time_per_question || 60);\n        console.log('Quiz state updated successfully');\n      } else {\n        throw new Error('Invalid response format: missing quiz_data');\n      }\n    } catch (err) {\n      console.error('Quiz generation error:', err);\n      let errorMessage = 'Failed to load quiz. Please try again.';\n\n      if (err.response) {\n        // Server responded with error\n        console.error('Response status:', err.response.status);\n        console.error('Response data:', err.response.data);\n        if (err.response.data && err.response.data.message) {\n          errorMessage = `Quiz generation failed: ${err.response.data.message}`;\n        } else if (err.response.status === 404) {\n          errorMessage = 'Quiz service not found. Please check if the backend is running.';\n        } else if (err.response.status === 500) {\n          errorMessage = 'Server error occurred. Please try again later.';\n        }\n      } else if (err.request) {\n        // Network error\n        console.error('Network error:', err.request);\n        errorMessage = 'Network error. Please check your connection and ensure the backend is running on localhost:5000.';\n      }\n\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerSelect = useCallback((answerId) => {\n    if (isSubmitted) return;\n    setSelectedAnswer(answerId);\n  }, [isSubmitted]);\n\n  const handleSubmitAnswer = async () => {\n    if (!currentQuestion || selectedAnswer === null || isSubmitted) return;\n\n    setIsSubmitted(true);\n    setShowFeedback(true);\n\n    const answerData = {\n      question_id: currentQuestion.question_number,\n      answer: selectedAnswer,\n      time_taken: (60 - timeLeft),\n      timestamp: new Date().toISOString()\n    };\n\n    try {\n      await quizAPI.submitAnswer(quiz.id, currentQuestion.id, selectedAnswer);\n      \n      const newAnswers = [...answers, answerData];\n      setAnswers(newAnswers);\n\n      const isCorrect = selectedAnswer === currentQuestion.correct_index;\n      if (isCorrect) {\n        setStreak(prev => prev + 1);\n      } else {\n        setStreak(0);\n      }\n\n      setTotalTime(prev => prev + (60 - timeLeft));\n\n      setTimeout(() => {\n        if (currentQuestionIndex < totalQuestions - 1) {\n          moveToNextQuestion();\n        } else {\n          completeQuiz(newAnswers);\n        }\n      }, 2000);\n\n    } catch (err) {\n      setError('Failed to submit answer. Please try again.');\n      console.error('Answer submission error:', err);\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    setCurrentQuestionIndex(prev => prev + 1);\n    setSelectedAnswer(null);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setTimeLeft(quizConfig?.time_per_question || 60);\n  };\n\n  const completeQuiz = async (finalAnswers) => {\n    setLoading(true);\n    \n    try {\n      const response = await quizAPI.getQuizResults(quiz.id);\n      setQuizResults(response.data);\n      \n      if (onQuizComplete) {\n        onQuizComplete({\n          quiz: quiz,\n          answers: finalAnswers,\n          results: response.data,\n          totalTime: totalTime\n        });\n      }\n    } catch (err) {\n      setError('Failed to get quiz results. Please try again.');\n      console.error('Results fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTimeUp = () => {\n    if (!isSubmitted) {\n      // Auto-submit with current selection or null if no selection\n      handleSubmitAnswer();\n    }\n  };\n\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setAnswers([]);\n    setIsSubmitted(false);\n    setShowFeedback(false);\n    setQuizResults(null);\n    setStreak(0);\n    setTotalTime(0);\n    setTimeLeft(quizConfig?.time_per_question || 60);\n    startQuiz();\n  };\n\n  const handleExit = () => {\n    if (onQuizExit) {\n      onQuizExit();\n    }\n  };\n\n  if (loading && !quiz) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.loading}>\n          <div className={styles.spinner}></div>\n          <p>Loading quiz...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.error}>\n          <h3>Error</h3>\n          <p>{error}</p>\n          <button className={styles.buttonPrimary} onClick={handleRestart}>\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (quizResults) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Quiz Complete!</h1>\n          <p className={styles.subtitle}>Great job on completing the quiz</p>\n        </div>\n        \n        <div className={styles.quizContainer}>\n          <div className={styles.questionContainer}>\n            <ScoreDisplay\n              score={quizResults.score}\n              totalQuestions={totalQuestions}\n              correctAnswers={quizResults.correct_answers}\n              timeBonus={quizResults.time_bonus}\n              streak={streak}\n              showDetails={true}\n            />\n            \n            <div className={styles.quizControls}>\n              <button className={styles.buttonSecondary} onClick={handleExit}>\n                Exit\n              </button>\n              <button className={styles.buttonPrimary} onClick={handleRestart}>\n                Start New Quiz\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!quiz || !currentQuestion) {\n    console.log('No quiz or current question available:', { quiz: !!quiz, currentQuestion: !!currentQuestion });\n    return (\n      <div className={styles.container}>\n        <div className={styles.error}>\n          <h3>No Quiz Available</h3>\n          <p>Please configure and start a new quiz.</p>\n          <p>Debug: Quiz loaded: {quiz ? 'Yes' : 'No'}, Questions: {quiz?.quiz_data?.questions?.length || 0}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <h1 className={styles.title}>Diagnosis Quiz</h1>\n        <p className={styles.subtitle}>Test your medical knowledge</p>\n      </div>\n\n      <div className={styles.quizContainer}>\n        <div className={styles.quizHeader}>\n          <div className={styles.quizInfo}>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Question</span>\n              <span className={styles.infoValue}>\n                {currentQuestionIndex + 1}/{totalQuestions}\n              </span>\n            </div>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Score</span>\n              <span className={styles.infoValue}>\n                {quizResults?.score || 0}\n              </span>\n            </div>\n            <div className={styles.infoItem}>\n              <span className={styles.infoLabel}>Streak</span>\n              <span className={styles.infoValue}>\n                {streak} 🔥\n              </span>\n            </div>\n          </div>\n          \n          <Timer\n            initialTime={timeLeft}\n            onTimeUp={handleTimeUp}\n            isRunning={!isSubmitted}\n            warningThreshold={10}\n          />\n        </div>\n\n        <ProgressBar\n          current={currentQuestionIndex + 1}\n          total={totalQuestions}\n          showPercentage={true}\n          showText={true}\n        />\n\n        <QuestionDisplay\n          question={currentQuestion}\n          onAnswerSelect={handleAnswerSelect}\n          selectedAnswer={selectedAnswer}\n          showFeedback={showFeedback}\n          isSubmitted={isSubmitted}\n        />\n\n        <div className={styles.quizControls}>\n          <button className={styles.buttonSecondary} onClick={handleExit}>\n            Exit Quiz\n          </button>\n          \n          {!isSubmitted ? (\n            <button \n              className={styles.buttonPrimary}\n              onClick={handleSubmitAnswer}\n              disabled={selectedAnswer === null}\n            >\n              Submit Answer\n            </button>\n          ) : (\n            <div className={styles.nextButtonContainer}>\n              {currentQuestionIndex < totalQuestions - 1 ? (\n                <span className={styles.nextQuestionText}>\n                  Next question in 2 seconds...\n                </span>\n              ) : (\n                <span className={styles.nextQuestionText}>\n                  Completing quiz...\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,MAAM,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAU,GAAGA,CAAC;EAClBC,UAAU;EACVC,cAAc;EACdC,UAAU;EACVC,MAAM,GAAG;AACX,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;EACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACuB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAGnE,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6B,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC2C,SAAS,EAAEC,YAAY,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAM6C,eAAe,GAAGxB,IAAI,aAAJA,IAAI,wBAAAJ,eAAA,GAAJI,IAAI,CAAEyB,SAAS,cAAA7B,eAAA,wBAAAC,qBAAA,GAAfD,eAAA,CAAiB8B,SAAS,cAAA7B,qBAAA,uBAA1BA,qBAAA,CAA6BK,oBAAoB,CAAC;EAC1E,MAAMyB,cAAc,GAAG,CAAA3B,IAAI,aAAJA,IAAI,wBAAAF,gBAAA,GAAJE,IAAI,CAAEyB,SAAS,cAAA3B,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiB4B,SAAS,cAAA3B,qBAAA,uBAA1BA,qBAAA,CAA4B6B,MAAM,KAAI,CAAC;EAE9DhD,SAAS,CAAC,MAAM;IACd,IAAIW,UAAU,EAAE;MACdsC,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACtC,UAAU,CAAC,CAAC;EAEhB,MAAMsC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAExC,UAAU,CAAC;IACxDsB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFe,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9C,MAAMC,QAAQ,GAAG,MAAM9C,OAAO,CAAC+C,YAAY,CAAC1C,UAAU,CAAC;MACvDuC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAAC;MAC/CF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAE5C,IAAIF,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACT,SAAS,EAAE;QAC5CK,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnC9B,OAAO,CAAC+B,QAAQ,CAACE,IAAI,CAAC;QACtBf,WAAW,CAAC5B,UAAU,CAAC4C,iBAAiB,IAAI,EAAE,CAAC;QAC/CL,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAChD,CAAC,MAAM;QACL,MAAM,IAAIK,KAAK,CAAC,4CAA4C,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZP,OAAO,CAAChB,KAAK,CAAC,wBAAwB,EAAEuB,GAAG,CAAC;MAC5C,IAAIC,YAAY,GAAG,wCAAwC;MAE3D,IAAID,GAAG,CAACL,QAAQ,EAAE;QAChB;QACAF,OAAO,CAAChB,KAAK,CAAC,kBAAkB,EAAEuB,GAAG,CAACL,QAAQ,CAACO,MAAM,CAAC;QACtDT,OAAO,CAAChB,KAAK,CAAC,gBAAgB,EAAEuB,GAAG,CAACL,QAAQ,CAACE,IAAI,CAAC;QAClD,IAAIG,GAAG,CAACL,QAAQ,CAACE,IAAI,IAAIG,GAAG,CAACL,QAAQ,CAACE,IAAI,CAACM,OAAO,EAAE;UAClDF,YAAY,GAAG,2BAA2BD,GAAG,CAACL,QAAQ,CAACE,IAAI,CAACM,OAAO,EAAE;QACvE,CAAC,MAAM,IAAIH,GAAG,CAACL,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;UACtCD,YAAY,GAAG,iEAAiE;QAClF,CAAC,MAAM,IAAID,GAAG,CAACL,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;UACtCD,YAAY,GAAG,gDAAgD;QACjE;MACF,CAAC,MAAM,IAAID,GAAG,CAACI,OAAO,EAAE;QACtB;QACAX,OAAO,CAAChB,KAAK,CAAC,gBAAgB,EAAEuB,GAAG,CAACI,OAAO,CAAC;QAC5CH,YAAY,GAAG,kGAAkG;MACnH;MAEAvB,QAAQ,CAACuB,YAAY,CAAC;IACxB,CAAC,SAAS;MACRzB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM6B,kBAAkB,GAAG7D,WAAW,CAAE8D,QAAQ,IAAK;IACnD,IAAInC,WAAW,EAAE;IACjBH,iBAAiB,CAACsC,QAAQ,CAAC;EAC7B,CAAC,EAAE,CAACnC,WAAW,CAAC,CAAC;EAEjB,MAAMoC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACpB,eAAe,IAAIpB,cAAc,KAAK,IAAI,IAAII,WAAW,EAAE;IAEhEC,cAAc,CAAC,IAAI,CAAC;IACpBE,eAAe,CAAC,IAAI,CAAC;IAErB,MAAMkC,UAAU,GAAG;MACjBC,WAAW,EAAEtB,eAAe,CAACuB,eAAe;MAC5CC,MAAM,EAAE5C,cAAc;MACtB6C,UAAU,EAAG,EAAE,GAAG/B,QAAS;MAC3BgC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAED,IAAI;MACF,MAAMlE,OAAO,CAACmE,YAAY,CAACrD,IAAI,CAACsD,EAAE,EAAE9B,eAAe,CAAC8B,EAAE,EAAElD,cAAc,CAAC;MAEvE,MAAMmD,UAAU,GAAG,CAAC,GAAGjD,OAAO,EAAEuC,UAAU,CAAC;MAC3CtC,UAAU,CAACgD,UAAU,CAAC;MAEtB,MAAMC,SAAS,GAAGpD,cAAc,KAAKoB,eAAe,CAACiC,aAAa;MAClE,IAAID,SAAS,EAAE;QACbnC,SAAS,CAACqC,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC7B,CAAC,MAAM;QACLrC,SAAS,CAAC,CAAC,CAAC;MACd;MAEAE,YAAY,CAACmC,IAAI,IAAIA,IAAI,IAAI,EAAE,GAAGxC,QAAQ,CAAC,CAAC;MAE5CyC,UAAU,CAAC,MAAM;QACf,IAAIzD,oBAAoB,GAAGyB,cAAc,GAAG,CAAC,EAAE;UAC7CiC,kBAAkB,CAAC,CAAC;QACtB,CAAC,MAAM;UACLC,YAAY,CAACN,UAAU,CAAC;QAC1B;MACF,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOlB,GAAG,EAAE;MACZtB,QAAQ,CAAC,4CAA4C,CAAC;MACtDe,OAAO,CAAChB,KAAK,CAAC,0BAA0B,EAAEuB,GAAG,CAAC;IAChD;EACF,CAAC;EAED,MAAMuB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BzD,uBAAuB,CAACuD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACzCrD,iBAAiB,CAAC,IAAI,CAAC;IACvBI,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,KAAK,CAAC;IACtBQ,WAAW,CAAC,CAAA5B,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE4C,iBAAiB,KAAI,EAAE,CAAC;EAClD,CAAC;EAED,MAAM0B,YAAY,GAAG,MAAOC,YAAY,IAAK;IAC3CjD,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAM9C,OAAO,CAAC6E,cAAc,CAAC/D,IAAI,CAACsD,EAAE,CAAC;MACtDrC,cAAc,CAACe,QAAQ,CAACE,IAAI,CAAC;MAE7B,IAAI1C,cAAc,EAAE;QAClBA,cAAc,CAAC;UACbQ,IAAI,EAAEA,IAAI;UACVM,OAAO,EAAEwD,YAAY;UACrBE,OAAO,EAAEhC,QAAQ,CAACE,IAAI;UACtBZ,SAAS,EAAEA;QACb,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZtB,QAAQ,CAAC,+CAA+C,CAAC;MACzDe,OAAO,CAAChB,KAAK,CAAC,sBAAsB,EAAEuB,GAAG,CAAC;IAC5C,CAAC,SAAS;MACRxB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoD,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACzD,WAAW,EAAE;MAChB;MACAoC,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMsB,aAAa,GAAGA,CAAA,KAAM;IAC1B/D,uBAAuB,CAAC,CAAC,CAAC;IAC1BE,iBAAiB,CAAC,IAAI,CAAC;IACvBE,UAAU,CAAC,EAAE,CAAC;IACdE,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,KAAK,CAAC;IACtBM,cAAc,CAAC,IAAI,CAAC;IACpBI,SAAS,CAAC,CAAC,CAAC;IACZE,YAAY,CAAC,CAAC,CAAC;IACfJ,WAAW,CAAC,CAAA5B,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE4C,iBAAiB,KAAI,EAAE,CAAC;IAChDN,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMsC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI1E,UAAU,EAAE;MACdA,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,IAAImB,OAAO,IAAI,CAACZ,IAAI,EAAE;IACpB,oBACEX,OAAA;MAAK+E,SAAS,EAAEjF,MAAM,CAACkF,SAAU;MAAAC,QAAA,eAC/BjF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAACyB,OAAQ;QAAA0D,QAAA,gBAC7BjF,OAAA;UAAK+E,SAAS,EAAEjF,MAAM,CAACoF;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtCtF,OAAA;UAAAiF,QAAA,EAAG;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI7D,KAAK,EAAE;IACT,oBACEzB,OAAA;MAAK+E,SAAS,EAAEjF,MAAM,CAACkF,SAAU;MAAAC,QAAA,eAC/BjF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAAC2B,KAAM;QAAAwD,QAAA,gBAC3BjF,OAAA;UAAAiF,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdtF,OAAA;UAAAiF,QAAA,EAAIxD;QAAK;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdtF,OAAA;UAAQ+E,SAAS,EAAEjF,MAAM,CAACyF,aAAc;UAACC,OAAO,EAAEX,aAAc;UAAAI,QAAA,EAAC;QAEjE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI3D,WAAW,EAAE;IACf,oBACE3B,OAAA;MAAK+E,SAAS,EAAEjF,MAAM,CAACkF,SAAU;MAAAC,QAAA,gBAC/BjF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAAC2F,MAAO;QAAAR,QAAA,gBAC5BjF,OAAA;UAAI+E,SAAS,EAAEjF,MAAM,CAAC4F,KAAM;UAAAT,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChDtF,OAAA;UAAG+E,SAAS,EAAEjF,MAAM,CAAC6F,QAAS;UAAAV,QAAA,EAAC;QAAgC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eAENtF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAAC8F,aAAc;QAAAX,QAAA,eACnCjF,OAAA;UAAK+E,SAAS,EAAEjF,MAAM,CAAC+F,iBAAkB;UAAAZ,QAAA,gBACvCjF,OAAA,CAACJ,YAAY;YACXkG,KAAK,EAAEnE,WAAW,CAACmE,KAAM;YACzBxD,cAAc,EAAEA,cAAe;YAC/ByD,cAAc,EAAEpE,WAAW,CAACqE,eAAgB;YAC5CC,SAAS,EAAEtE,WAAW,CAACuE,UAAW;YAClCnE,MAAM,EAAEA,MAAO;YACfoE,WAAW,EAAE;UAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eAEFtF,OAAA;YAAK+E,SAAS,EAAEjF,MAAM,CAACsG,YAAa;YAAAnB,QAAA,gBAClCjF,OAAA;cAAQ+E,SAAS,EAAEjF,MAAM,CAACuG,eAAgB;cAACb,OAAO,EAAEV,UAAW;cAAAG,QAAA,EAAC;YAEhE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTtF,OAAA;cAAQ+E,SAAS,EAAEjF,MAAM,CAACyF,aAAc;cAACC,OAAO,EAAEX,aAAc;cAAAI,QAAA,EAAC;YAEjE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAAC3E,IAAI,IAAI,CAACwB,eAAe,EAAE;IAAA,IAAAmE,gBAAA,EAAAC,qBAAA;IAC7B9D,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE;MAAE/B,IAAI,EAAE,CAAC,CAACA,IAAI;MAAEwB,eAAe,EAAE,CAAC,CAACA;IAAgB,CAAC,CAAC;IAC3G,oBACEnC,OAAA;MAAK+E,SAAS,EAAEjF,MAAM,CAACkF,SAAU;MAAAC,QAAA,eAC/BjF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAAC2B,KAAM;QAAAwD,QAAA,gBAC3BjF,OAAA;UAAAiF,QAAA,EAAI;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BtF,OAAA;UAAAiF,QAAA,EAAG;QAAsC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7CtF,OAAA;UAAAiF,QAAA,GAAG,sBAAoB,EAACtE,IAAI,GAAG,KAAK,GAAG,IAAI,EAAC,eAAa,EAAC,CAAAA,IAAI,aAAJA,IAAI,wBAAA2F,gBAAA,GAAJ3F,IAAI,CAAEyB,SAAS,cAAAkE,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBjE,SAAS,cAAAkE,qBAAA,uBAA1BA,qBAAA,CAA4BhE,MAAM,KAAI,CAAC;QAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEtF,OAAA;IAAK+E,SAAS,EAAEjF,MAAM,CAACkF,SAAU;IAAAC,QAAA,gBAC/BjF,OAAA;MAAK+E,SAAS,EAAEjF,MAAM,CAAC2F,MAAO;MAAAR,QAAA,gBAC5BjF,OAAA;QAAI+E,SAAS,EAAEjF,MAAM,CAAC4F,KAAM;QAAAT,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDtF,OAAA;QAAG+E,SAAS,EAAEjF,MAAM,CAAC6F,QAAS;QAAAV,QAAA,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAENtF,OAAA;MAAK+E,SAAS,EAAEjF,MAAM,CAAC8F,aAAc;MAAAX,QAAA,gBACnCjF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAAC0G,UAAW;QAAAvB,QAAA,gBAChCjF,OAAA;UAAK+E,SAAS,EAAEjF,MAAM,CAAC2G,QAAS;UAAAxB,QAAA,gBAC9BjF,OAAA;YAAK+E,SAAS,EAAEjF,MAAM,CAAC4G,QAAS;YAAAzB,QAAA,gBAC9BjF,OAAA;cAAM+E,SAAS,EAAEjF,MAAM,CAAC6G,SAAU;cAAA1B,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClDtF,OAAA;cAAM+E,SAAS,EAAEjF,MAAM,CAAC8G,SAAU;cAAA3B,QAAA,GAC/BpE,oBAAoB,GAAG,CAAC,EAAC,GAAC,EAACyB,cAAc;YAAA;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNtF,OAAA;YAAK+E,SAAS,EAAEjF,MAAM,CAAC4G,QAAS;YAAAzB,QAAA,gBAC9BjF,OAAA;cAAM+E,SAAS,EAAEjF,MAAM,CAAC6G,SAAU;cAAA1B,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC/CtF,OAAA;cAAM+E,SAAS,EAAEjF,MAAM,CAAC8G,SAAU;cAAA3B,QAAA,EAC/B,CAAAtD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEmE,KAAK,KAAI;YAAC;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNtF,OAAA;YAAK+E,SAAS,EAAEjF,MAAM,CAAC4G,QAAS;YAAAzB,QAAA,gBAC9BjF,OAAA;cAAM+E,SAAS,EAAEjF,MAAM,CAAC6G,SAAU;cAAA1B,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChDtF,OAAA;cAAM+E,SAAS,EAAEjF,MAAM,CAAC8G,SAAU;cAAA3B,QAAA,GAC/BlD,MAAM,EAAC,eACV;YAAA;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENtF,OAAA,CAACL,KAAK;UACJkH,WAAW,EAAEhF,QAAS;UACtBiF,QAAQ,EAAElC,YAAa;UACvBmC,SAAS,EAAE,CAAC5F,WAAY;UACxB6F,gBAAgB,EAAE;QAAG;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENtF,OAAA,CAACN,WAAW;QACVuH,OAAO,EAAEpG,oBAAoB,GAAG,CAAE;QAClCqG,KAAK,EAAE5E,cAAe;QACtB6E,cAAc,EAAE,IAAK;QACrBC,QAAQ,EAAE;MAAK;QAAAjC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eAEFtF,OAAA,CAACP,eAAe;QACd4H,QAAQ,EAAElF,eAAgB;QAC1BmF,cAAc,EAAEjE,kBAAmB;QACnCtC,cAAc,EAAEA,cAAe;QAC/BM,YAAY,EAAEA,YAAa;QAC3BF,WAAW,EAAEA;MAAY;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eAEFtF,OAAA;QAAK+E,SAAS,EAAEjF,MAAM,CAACsG,YAAa;QAAAnB,QAAA,gBAClCjF,OAAA;UAAQ+E,SAAS,EAAEjF,MAAM,CAACuG,eAAgB;UAACb,OAAO,EAAEV,UAAW;UAAAG,QAAA,EAAC;QAEhE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAER,CAACnE,WAAW,gBACXnB,OAAA;UACE+E,SAAS,EAAEjF,MAAM,CAACyF,aAAc;UAChCC,OAAO,EAAEjC,kBAAmB;UAC5BgE,QAAQ,EAAExG,cAAc,KAAK,IAAK;UAAAkE,QAAA,EACnC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAETtF,OAAA;UAAK+E,SAAS,EAAEjF,MAAM,CAAC0H,mBAAoB;UAAAvC,QAAA,EACxCpE,oBAAoB,GAAGyB,cAAc,GAAG,CAAC,gBACxCtC,OAAA;YAAM+E,SAAS,EAAEjF,MAAM,CAAC2H,gBAAiB;YAAAxC,QAAA,EAAC;UAE1C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,gBAEPtF,OAAA;YAAM+E,SAAS,EAAEjF,MAAM,CAAC2H,gBAAiB;YAAAxC,QAAA,EAAC;UAE1C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChF,EAAA,CA9UIL,UAAU;AAAAyH,EAAA,GAAVzH,UAAU;AAgVhB,eAAeA,UAAU;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}