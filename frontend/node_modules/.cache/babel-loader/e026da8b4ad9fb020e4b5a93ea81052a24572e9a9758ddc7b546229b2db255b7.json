{"ast":null,"code":"import React,{useState}from'react';import MultiCaseMatcher from'./MultiCaseMatcher';import styles from'../styles/QuizPlayer.module.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QuestionDisplay=_ref=>{let{question,onAnswerSelect,selectedAnswer,showFeedback=false,isSubmitted=false}=_ref;console.log('QuestionDisplay rendered with:',{question,selectedAnswer,showFeedback,isSubmitted});const[hoveredOption,setHoveredOption]=useState(null);if(!question){console.log('No question provided to QuestionDisplay');return/*#__PURE__*/_jsx(\"div\",{className:styles.loading,children:/*#__PURE__*/_jsx(\"div\",{className:styles.spinner})});}const handleOptionClick=optionId=>{if(!isSubmitted&&onAnswerSelect){onAnswerSelect(optionId);}};const getOptionClassName=optionId=>{let className=styles.answerOption;if(selectedAnswer===optionId&&!isSubmitted){className+=\" \".concat(styles.selected);}if(isSubmitted){if(optionId===question.correct_answer){className+=\" \".concat(styles.correct);}else if(selectedAnswer===optionId&&optionId!==question.correct_answer){className+=\" \".concat(styles.incorrect);}}if(hoveredOption===optionId&&!isSubmitted){className+=\" \".concat(styles.hovered);}return className;};const renderCaseDetails=()=>{if(!question.case_details)return null;return/*#__PURE__*/_jsxs(\"div\",{className:styles.caseDetails,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Case Details\"}),question.case_details.age&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Age:\"}),\" \",question.case_details.age]}),question.case_details.gender&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Gender:\"}),\" \",question.case_details.gender]}),(question.case_details.chief_complaint||question.case_details.history)&&/*#__PURE__*/_jsx(\"h5\",{children:\"Presentation\"}),question.case_details.chief_complaint&&/*#__PURE__*/_jsxs(\"p\",{style:{whiteSpace:'pre-wrap'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Chief Complaint:\"}),\" \",question.case_details.chief_complaint]}),question.case_details.history&&/*#__PURE__*/_jsxs(\"p\",{style:{whiteSpace:'pre-wrap'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"History:\"}),\" \",question.case_details.history]}),question.case_details.examination&&/*#__PURE__*/_jsx(\"h5\",{children:\"MSE\"}),question.case_details.examination&&/*#__PURE__*/_jsxs(\"p\",{style:{whiteSpace:'pre-wrap'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Examination:\"}),\" \",question.case_details.examination]}),question.case_details.vitals&&/*#__PURE__*/_jsxs(\"p\",{style:{whiteSpace:'pre-wrap'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Vitals:\"}),\" \",question.case_details.vitals]})]});};const renderOptions=()=>{if(!question.options||!Array.isArray(question.options)){return/*#__PURE__*/_jsx(\"p\",{children:\"No options available\"});}return question.options.map((option,index)=>/*#__PURE__*/_jsxs(\"button\",{className:getOptionClassName(option.id!==undefined?option.id:index),onClick:()=>handleOptionClick(option.id!==undefined?option.id:index),onMouseEnter:()=>setHoveredOption(option.id!==undefined?option.id:index),onMouseLeave:()=>setHoveredOption(null),disabled:isSubmitted,children:[/*#__PURE__*/_jsxs(\"span\",{className:styles.answerLabel,children:[String.fromCharCode(65+index),\".\"]}),option.text||option]},option.id!==undefined?option.id:index));};const renderFeedback=()=>{var _question$options;if(!showFeedback||!isSubmitted)return null;const isCorrect=selectedAnswer===question.correct_index;const correctOption=(_question$options=question.options)===null||_question$options===void 0?void 0:_question$options.find(opt=>opt.id===question.correct_index);return/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles.feedback,\" \").concat(isCorrect?styles.correct:styles.incorrect),children:[/*#__PURE__*/_jsx(\"h4\",{children:isCorrect?'✓ Correct!':'✗ Incorrect'}),question.explanation&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Explanation:\"}),\" \",question.explanation]}),question.reference&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Reference:\"}),\" \",question.reference]}),!isCorrect&&correctOption&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Correct Answer:\"}),\" \",correctOption.text]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:styles.questionContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.questionHeader,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.questionNumber,children:[\"Question \",question.question_number||'N/A']}),/*#__PURE__*/_jsx(\"h2\",{className:styles.questionText,children:question.question_text||question.text}),question.difficulty&&/*#__PURE__*/_jsxs(\"div\",{className:styles.difficultyBadge,children:[\"Difficulty: \",question.difficulty]}),question.category&&/*#__PURE__*/_jsx(\"div\",{className:styles.categoryBadge,children:question.category})]}),question.question_type==='multi_case_matching'?/*#__PURE__*/_jsx(MultiCaseMatcher,{question:question,onAnswerSelect:onAnswerSelect,selectedAnswer:selectedAnswer,showFeedback:showFeedback,isSubmitted:isSubmitted}):/*#__PURE__*/_jsxs(_Fragment,{children:[renderCaseDetails(),/*#__PURE__*/_jsx(\"div\",{className:styles.answersContainer,children:renderOptions()})]}),renderFeedback()]});};export default QuestionDisplay;","map":{"version":3,"names":["React","useState","MultiCaseMatcher","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuestionDisplay","_ref","question","onAnswerSelect","selectedAnswer","showFeedback","isSubmitted","console","log","hoveredOption","setHoveredOption","className","loading","children","spinner","handleOptionClick","optionId","getOptionClassName","answerOption","concat","selected","correct_answer","correct","incorrect","hovered","renderCaseDetails","case_details","caseDetails","age","gender","chief_complaint","history","style","whiteSpace","examination","vitals","renderOptions","options","Array","isArray","map","option","index","id","undefined","onClick","onMouseEnter","onMouseLeave","disabled","answerLabel","String","fromCharCode","text","renderFeedback","_question$options","isCorrect","correct_index","correctOption","find","opt","feedback","explanation","reference","questionContainer","questionHeader","questionNumber","question_number","questionText","question_text","difficulty","difficultyBadge","category","categoryBadge","question_type","answersContainer"],"sources":["/home/endrawes/diagnosis_quiz_tool/frontend/src/components/QuestionDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MultiCaseMatcher from './MultiCaseMatcher';\nimport styles from '../styles/QuizPlayer.module.css';\n\nconst QuestionDisplay = ({\n  question,\n  onAnswerSelect,\n  selectedAnswer,\n  showFeedback = false,\n  isSubmitted = false\n}) => {\n  console.log('QuestionDisplay rendered with:', { question, selectedAnswer, showFeedback, isSubmitted });\n\n  const [hoveredOption, setHoveredOption] = useState(null);\n\n  if (!question) {\n    console.log('No question provided to QuestionDisplay');\n    return (\n      <div className={styles.loading}>\n        <div className={styles.spinner}></div>\n      </div>\n    );\n  }\n\n  const handleOptionClick = (optionId) => {\n    if (!isSubmitted && onAnswerSelect) {\n      onAnswerSelect(optionId);\n    }\n  };\n\n  const getOptionClassName = (optionId) => {\n    let className = styles.answerOption;\n    \n    if (selectedAnswer === optionId && !isSubmitted) {\n      className += ` ${styles.selected}`;\n    }\n    \n    if (isSubmitted) {\n      if (optionId === question.correct_answer) {\n        className += ` ${styles.correct}`;\n      } else if (selectedAnswer === optionId && optionId !== question.correct_answer) {\n        className += ` ${styles.incorrect}`;\n      }\n    }\n    \n    if (hoveredOption === optionId && !isSubmitted) {\n      className += ` ${styles.hovered}`;\n    }\n    \n    return className;\n  };\n\n  const renderCaseDetails = () => {\n    if (!question.case_details) return null;\n\n    return (\n      <div className={styles.caseDetails}>\n        <h4>Case Details</h4>\n        {question.case_details.age && (\n          <p><strong>Age:</strong> {question.case_details.age}</p>\n        )}\n        {question.case_details.gender && (\n          <p><strong>Gender:</strong> {question.case_details.gender}</p>\n        )}\n        {(question.case_details.chief_complaint || question.case_details.history) && <h5>Presentation</h5>}\n        {question.case_details.chief_complaint && (\n          <p style={{whiteSpace: 'pre-wrap'}}><strong>Chief Complaint:</strong> {question.case_details.chief_complaint}</p>\n        )}\n        {question.case_details.history && (\n          <p style={{whiteSpace: 'pre-wrap'}}><strong>History:</strong> {question.case_details.history}</p>\n        )}\n        {question.case_details.examination && <h5>MSE</h5>}\n        {question.case_details.examination && (\n          <p style={{whiteSpace: 'pre-wrap'}}><strong>Examination:</strong> {question.case_details.examination}</p>\n        )}\n        {question.case_details.vitals && (\n          <p style={{whiteSpace: 'pre-wrap'}}><strong>Vitals:</strong> {question.case_details.vitals}</p>\n        )}\n      </div>\n    );\n  };\n\n  const renderOptions = () => {\n    if (!question.options || !Array.isArray(question.options)) {\n      return <p>No options available</p>;\n    }\n\n    return question.options.map((option, index) => (\n      <button\n        key={option.id !== undefined ? option.id : index}\n        className={getOptionClassName(option.id !== undefined ? option.id : index)}\n        onClick={() => handleOptionClick(option.id !== undefined ? option.id : index)}\n        onMouseEnter={() => setHoveredOption(option.id !== undefined ? option.id : index)}\n        onMouseLeave={() => setHoveredOption(null)}\n        disabled={isSubmitted}\n      >\n        <span className={styles.answerLabel}>\n          {String.fromCharCode(65 + index)}.\n        </span>\n        {option.text || option}\n      </button>\n    ));\n  };\n\n  const renderFeedback = () => {\n    if (!showFeedback || !isSubmitted) return null;\n\n    const isCorrect = selectedAnswer === question.correct_index;\n    const correctOption = question.options?.find(opt => opt.id === question.correct_index);\n\n    return (\n      <div className={`${styles.feedback} ${isCorrect ? styles.correct : styles.incorrect}`}>\n        <h4>{isCorrect ? '✓ Correct!' : '✗ Incorrect'}</h4>\n        {question.explanation && (\n          <p><strong>Explanation:</strong> {question.explanation}</p>\n        )}\n        {question.reference && (\n          <p><strong>Reference:</strong> {question.reference}</p>\n        )}\n        {!isCorrect && correctOption && (\n          <p><strong>Correct Answer:</strong> {correctOption.text}</p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.questionContainer}>\n      <div className={styles.questionHeader}>\n        <div className={styles.questionNumber}>\n          Question {question.question_number || 'N/A'}\n        </div>\n        <h2 className={styles.questionText}>\n          {question.question_text || question.text}\n        </h2>\n        {question.difficulty && (\n          <div className={styles.difficultyBadge}>\n            Difficulty: {question.difficulty}\n          </div>\n        )}\n        {question.category && (\n          <div className={styles.categoryBadge}>\n            {question.category}\n          </div>\n        )}\n      </div>\n\n      {question.question_type === 'multi_case_matching' ? (\n        <MultiCaseMatcher\n          question={question}\n          onAnswerSelect={onAnswerSelect}\n          selectedAnswer={selectedAnswer}\n          showFeedback={showFeedback}\n          isSubmitted={isSubmitted}\n        />\n      ) : (\n        <>\n          {renderCaseDetails()}\n\n          <div className={styles.answersContainer}>\n            {renderOptions()}\n          </div>\n        </>\n      )}\n\n      {renderFeedback()}\n    </div>\n  );\n};\n\nexport default QuestionDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}